# This file is generated by Chef, manual changes may be overwritten.
#
# stud(8), The Scalable TLS Unwrapping Daemon's configuration
#

# NOTE: all config file parameters can be overriden
#       from command line!

# Listening address. REQUIRED.
#
# type: string
# syntax: [HOST]:PORT
frontend = "<%= node[:stud][:options][:frontend] %>"

# Upstream server address. REQUIRED.
#
# type: string
# syntax: [HOST]:PORT.
backend = "<%= node[:stud][:options][:backend] %>"

# SSL x509 certificate file. REQUIRED.
# List multiple certs to use SNI. Certs are used in the order they
# are listed; the last cert listed will be used if none of the others match
#
# type: string
pem-file = "<%= node[:stud][:pemfile_path] %>"

# SSL protocol.
#
tls = <%= node[:stud][:options][:tls] %>
ssl = <%= node[:stud][:options][:ssl] %>

# List of allowed SSL ciphers.
#
# Run openssl ciphers for list of available ciphers.
# type: string
ciphers = "<%= node[:stud][:options][:ciphers] %>"

# Enforce server cipher list order
#
# type: boolean
prefer-server-ciphers = <%= node[:stud][:options][:prefer_server_ciphers] %>

# Use specified SSL engine
#
# type: string
ssl-engine = "<%= node[:stud][:options][:ssl_engine] %>"

# Number of worker processes
#
# type: integer
workers = <%= node[:stud][:options][:workers] %>

# Listen backlog size
#
# type: integer
backlog = <%= node[:stud][:options][:backlog] %>

# TCP socket keepalive interval in seconds
#
# type: integer
keepalive = <%= node[:stud][:options][:keepalive_secs] %>

# Chroot directory
#
# type: string
chroot = "<%= node[:stud][:options][:chroot_path] %>"

# Set uid after binding a socket
#
# type: string
user = "<%= node[:stud][:options][:user] %>"

# Set gid after binding a socket
#
# type: string
group = "<%= node[:stud][:options][:group] %>"

# Quiet execution, report only error messages
#
# type: boolean
quiet = <%= node[:stud][:options][:quiet] %>

# Use syslog for logging
#
# type: boolean
syslog = <%= node[:stud][:options][:send_to_syslog] %>

# Syslog facility to use
#
# type: string
syslog-facility = "<%= node[:stud][:options][:syslog_facility] %>"

# Run as daemon
#
# type: boolean
daemon = <%= node[:stud][:options][:daemon] %>

# Report client address by writing IP before sending data
#
# NOTE: This option is mutually exclusive with option write-proxy and proxy-proxy.
#
# type: boolean
write-ip = <%= node[:stud][:options][:write_ip] %>

# Report client address using SENDPROXY protocol, see
# http://haproxy.1wt.eu/download/1.5/doc/proxy-protocol.txt
# for details.
#
# NOTE: This option is mutually exclusive with option write-ip and proxy-proxy.
#
# type: boolean
write-proxy = <%= node[:stud][:options][:write_proxy] %>

# Proxy an existing SENDPROXY protocol header through this request.
#
# NOTE: This option is mutually exclusive with option write-ip and write-proxy.
#
# type: boolean
proxy-proxy = <%= node[:stud][:options][:proxy_proxy] %>

# EOF
